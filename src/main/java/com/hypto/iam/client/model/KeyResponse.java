/*
 * Hypto IAM
 * APIs for Hypto IAM Service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engineering@hypto.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.hypto.iam.client.model;


import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Objects;

/** KeyResponse */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KeyResponse {
    public static final String SERIALIZED_NAME_KID = "kid";

    @SerializedName(SERIALIZED_NAME_KID)
    private String kid;

    public static final String SERIALIZED_NAME_STATUS = "status";

    @SerializedName(SERIALIZED_NAME_STATUS)
    private String status;

    /** Gets or Sets format */
    @JsonAdapter(FormatEnum.Adapter.class)
    public enum FormatEnum {
        DER("der"),

        PEM("pem");

        private String value;

        FormatEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static FormatEnum fromValue(String value) {
            for (FormatEnum b : FormatEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        public static class Adapter extends TypeAdapter<FormatEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final FormatEnum enumeration)
                    throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public FormatEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return FormatEnum.fromValue(value);
            }
        }
    }

    public static final String SERIALIZED_NAME_FORMAT = "format";

    @SerializedName(SERIALIZED_NAME_FORMAT)
    private FormatEnum format;

    public static final String SERIALIZED_NAME_KEY = "key";

    @SerializedName(SERIALIZED_NAME_KEY)
    private String key;

    public KeyResponse() {}

    public KeyResponse kid(String kid) {

        this.kid = kid;
        return this;
    }

    /**
     * Get kid
     *
     * @return kid
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    public String getKid() {
        return kid;
    }

    public void setKid(String kid) {
        this.kid = kid;
    }

    public KeyResponse status(String status) {

        this.status = status;
        return this;
    }

    /**
     * The status of the key. Valid values are SIGNING, VERIFYING and EXPIRED
     *
     * @return status
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(
            required = true,
            value = "The status of the key. Valid values are SIGNING, VERIFYING and EXPIRED")
    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public KeyResponse format(FormatEnum format) {

        this.format = format;
        return this;
    }

    /**
     * Get format
     *
     * @return format
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    public FormatEnum getFormat() {
        return format;
    }

    public void setFormat(FormatEnum format) {
        this.format = format;
    }

    public KeyResponse key(String key) {

        this.key = key;
        return this;
    }

    /**
     * Get key
     *
     * @return key
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        KeyResponse keyResponse = (KeyResponse) o;
        return Objects.equals(this.kid, keyResponse.kid)
                && Objects.equals(this.status, keyResponse.status)
                && Objects.equals(this.format, keyResponse.format)
                && Objects.equals(this.key, keyResponse.key);
    }

    @Override
    public int hashCode() {
        return Objects.hash(kid, status, format, key);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KeyResponse {\n");
        sb.append("    kid: ").append(toIndentedString(kid)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    format: ").append(toIndentedString(format)).append("\n");
        sb.append("    key: ").append(toIndentedString(key)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
