/*
 * Hypto IAM
 * APIs for Hypto IAM Service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engineering@hypto.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.hypto.iam.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/** Payload to create policy from template */
@ApiModel(description = "Payload to create policy from template")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreatePolicyFromTemplateRequest {
    public static final String SERIALIZED_NAME_NAME = "name";

    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;

    public static final String SERIALIZED_NAME_TEMPLATE_NAME = "templateName";

    @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
    private String templateName;

    public static final String SERIALIZED_NAME_TEMPLATE_VARIABLES = "templateVariables";

    @SerializedName(SERIALIZED_NAME_TEMPLATE_VARIABLES)
    private Map<String, String> templateVariables = null;

    public CreatePolicyFromTemplateRequest() {}

    public CreatePolicyFromTemplateRequest name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public CreatePolicyFromTemplateRequest templateName(String templateName) {

        this.templateName = templateName;
        return this;
    }

    /**
     * Get templateName
     *
     * @return templateName
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    public String getTemplateName() {
        return templateName;
    }

    public void setTemplateName(String templateName) {
        this.templateName = templateName;
    }

    public CreatePolicyFromTemplateRequest templateVariables(
            Map<String, String> templateVariables) {

        this.templateVariables = templateVariables;
        return this;
    }

    public CreatePolicyFromTemplateRequest putTemplateVariablesItem(
            String key, String templateVariablesItem) {
        if (this.templateVariables == null) {
            this.templateVariables = new HashMap<>();
        }
        this.templateVariables.put(key, templateVariablesItem);
        return this;
    }

    /**
     * Get templateVariables
     *
     * @return templateVariables
     */
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    public Map<String, String> getTemplateVariables() {
        return templateVariables;
    }

    public void setTemplateVariables(Map<String, String> templateVariables) {
        this.templateVariables = templateVariables;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreatePolicyFromTemplateRequest createPolicyFromTemplateRequest =
                (CreatePolicyFromTemplateRequest) o;
        return Objects.equals(this.name, createPolicyFromTemplateRequest.name)
                && Objects.equals(this.templateName, createPolicyFromTemplateRequest.templateName)
                && Objects.equals(
                        this.templateVariables, createPolicyFromTemplateRequest.templateVariables);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, templateName, templateVariables);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreatePolicyFromTemplateRequest {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
        sb.append("    templateVariables: ")
                .append(toIndentedString(templateVariables))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
